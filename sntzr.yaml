---
global_patterns:
  - 'kind': 'hex_id'
    'kindof': 'raw'
    'kindof_placeholder': '-'
    'regex': '[A-Fa-f0-9]{32,64}'
    'activated': false
    # TODO: felipegc look at the comments at the end of the file to change the structure and add new features...
    # TODO: felipegc improve the following names and code generation
  - 'kind': 'crazy_name' # change to replacer_function
    'kindof': 'raw' # data_type (raw, json, kv, xml)
    'kindof_placeholder': '-' # field_name (only for structered data type)
    'regex': 'S(?:\-\d+){3}'
    'activated': false
    # new field -> create replace_function to be called dynamically
    #'replacer_function': 'integer(1,10)', 'hex(16)', 'random_string(10)' e etc....
  - 'kind': 'mac_address_no_colon'
    'kindof': 'tag_xml'
    'kindof_placeholder': 'RawMACAddress' # TODO: felipegc could it be regex so we would replace multiple names: HostMac, TargetMac
    'regex': '[A-Fa-f0-9]{12}'
    'activated': false
  - 'kind': 'machine_name'
    'kindof': 'tag_xml'
    'kindof_placeholder': 'MachineName'
    'regex': '[A-Z0-9-]+'
    'activated': false
  - 'kind': 'machine_name'
    'kindof': 'tag_xml'
    'kindof_placeholder': 'TargetHostName'
    'regex': '[A-Z0-9-]+'
    'activated': false
  - 'kind': 'machine_name'
    'kindof': 'tag_xml'
    'kindof_placeholder': 'AnalyzerHostName'
    'regex': '[A-Z0-9-]+'
    'activated': false
  - 'kind': 'user_name_with_domain'
    'kindof': 'tag_xml'
    'kindof_placeholder': 'UserName'
    'regex': '[a-zA-Z0-9-]+'
    'activated': false
  - 'kind': 'ip'
    'kindof': 'raw'
    'kindof_placeholder': '-'
    'regex': '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'
    'activated': true
  - 'kind': 'guid'
    'kindof': 'raw'
    'kindof_placeholder': '-'
    'regex': '[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}'
    'activated': false
  - 'kind': 'external_id'
    'kindof': 'kv'
    'kindof_placeholder': 'externalId'
    'regex': '[0-9]{6}'
    'activated': false
  - 'kind': 'shost'
    'kindof': 'kv'
    'kindof_placeholder': 'shost' # TODO: felipegc make sure to create specific separators
    'regex': '[a-z0-9]*\.[a-z0-9]*\.[a-z0-9]*'
    'activated': false
  - 'kind': 'dt_machine_name'
    'kindof': 'raw'
    'kindof_placeholder': ''
    'regex': 'dtools-dt-[0-9]{4}-[0-9]{2}'
    'activated': false
ip_regex: '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'
ip_prefix: '1.1.1.'
keywords:
  'abc\.com': 'acme.com'
  'www\.com': 'acme.org'
  'zzz\..*\.com': 'acme.edu'


# TODO: felipegc we should change to the following pattern in order to be more dinamic
---
global_patterns:
  - ipv4: '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'
patterns:
  - data: 'raw|json|xml|kv|csv'
    field: 'UserAddress' # regex to match for structured data
    pattern: '' # regex to match and replace
    replace: 'random|ip|mac|integer(1,10)|hex(16)|random_string(10)' # or a fixed value if does not match with any function
  - data: 'raw'
    pattern: 'gr://ipv4'
    replace: 'ipv4()'
  - data: 'raw'
    pattern: 'abc\.com'
    replace: 'acme.com' # or a fixed value if does not match with any function
  - data: 'json'
    field: 'HostIp'
    pattern: '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'
    replace: 'ipv4()'
  # TODO: felipegc with all this in place we may discard the ip_prefix and keywords approach
